- guide: '2x2x2-ortega'
  phase: null 
  section: 'a'
  number: 1
  description: 'Corner facing front. Move to bottom right corner facing down.'
  algorithm: "F' U' F"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'a'
  number: 2 
  description: 'Corner facing right. Move to bottom right corner facing down.'
  algorithm: "R U R'"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'a'
  number: 3 
  description: 'Corner facing up. Move to bottom right corner facing down.'
  algorithm: "U R<sup>2</sup> U' R<sup>2</sup>"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'b'
  number: 1 
  description: ''
  algorithm: "F (R U R' U') F'"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'b'
  number: 2 
  description: ''
  algorithm: "(R U R' U') (R' F R F')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'b'
  number: 3 
  description: ''
  algorithm: "F (R U') (R' U' R U) (R' F')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'b'
  number: 4 
  description: ''
  algorithm: "(R U R' U) (R U<sup>2</sup> R')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'b'
  number: 5 
  description: ''
  algorithm: "(R U<sup>2</sup> R' U') (R U' R')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'b'
  number: 6 
  description: ''
  algorithm: "F (R U R' U') (R U R' U') F'"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'b'
  number: 7 
  description: ''
  algorithm: "R<sup>2</sup> U<sup>2</sup> R U<sup>2</sup> R<sup>2</sup>"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 1 
  description: ''
  algorithm: "(R U R' U') (R' F) (R<sup>2</sup> U') (R' U' R U) (R' F')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 2 
  description: ''
  algorithm: "x<sup>2</sup> (R U R' U') (R' F) (R<sup>2</sup> U') (R' U' R U) (R' F')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 3 
  description: ''
  algorithm: "(F R U') (R' U' R U) (R' F') (R U R' U') (R' F R F')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 4 
  description: ''
  algorithm: "z2y (F R U') (R' U' R U) (R' F') (R U R' U') (R' F R F')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 5 
  description: ''
  algorithm: "(R<sup>2</sup> U' R<sup>2</sup>) (U<sup>2</sup> y) (R<sup>2</sup> U' R<sup>2</sup>)"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 6 
  description: ''
  algorithm: "(R U' R) F<sup>2</sup> (R' U R')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 7 
  description: ''
  algorithm: "(L D' L) F<sup>2</sup> (L' D L')"
- guide: '2x2x2-ortega'
  phase: null 
  section: 'c'
  number: 8 
  description: ''
  algorithm: "R<sup>2</sup> F<sup>2</sup> R<sup>2</sup>"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'a'
  number: null
  description: ''
  algorithm: 'r, l, u and/or b'
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'b'
  number: null
  description: ''
  algorithm: 'R, L, U and/or B'
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'c'
  number: 1 
  description: 'Move edge to first layer.'
  algorithm: "R' D R"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'c'
  number: 2 
  description: 'Move edge to first layer.'
  algorithm: "L D' L'"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'c'
  number: 3 
  description: 'Rotate edge in first layer.'
  algorithm: "L D L' D' R' D R"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'd'
  number: 1 
  description: 'Swap two edges on last layer.'
  algorithm: "R U' R' U R' L R L'"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'd'
  number: 2 
  description: 'Cycle three edges on last layer anti-clockwise.'
  algorithm: "R U R' U R U R'"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'd'
  number: 3 
  description: 'Cycle three edges on last layer clockwise.'
  algorithm: "R U' R' U' R U' R'"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'd'
  number: 4 
  description: 'Cycle three edges and rotate two edges on last layer anti-clockwise.'
  algorithm: "L R U R' U' L'"
- guide: 'pyraminx-layer-by-layer'
  phase: null
  section: 'd'
  number: 5 
  description: 'Cycle three edges and rotate two edges on last layer clockwise.'
  algorithm: "R' L' U' L U R"
- guide: 'skewb-layer-by-layer'
  phase: null
  section: 'a'
  number: 1 
  description: 'Rotate last corner clockwise.'
  algorithm: "L' F' L F"
- guide: 'skewb-layer-by-layer'
  phase: null
  section: 'a'
  number: 2 
  description: 'Rotate last corner anti-clockwise.'
  algorithm: "R F R' F'"
- guide: 'skewb-layer-by-layer'
  phase: null
  section: 'b'
  number: 1 
  description: 'Rotate three faces (Left, Right & Down) clockwise.'
  algorithm: "(R' B' R B) (L B L' B')"
- guide: 'skewb-layer-by-layer'
  phase: null
  section: 'b'
  number: 2 
  description: 'Rotate three faces (Right, Left & Down) anti-clockwise.'
  algorithm: "(L B L' B') (R' B' R B)"
- guide: 'skewb-layer-by-layer'
  phase: null
  section: 'c'
  number: 1 
  description: 'Two corners are correctly facing down and two corners are facing back. Rotate other corners.'
  algorithm: "(L' D L D') x 4"
- guide: 'skewb-layer-by-layer'
  phase: null
  section: 'c'
  number: 2 
  description: 'Two corners are incorrectly facing right. Rotate all corners.'
  algorithm: "(L' D L D') x 2"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'a'
  number: 1 
  description: 'Move all small pieces to the top layer.'
  algorithm: "-"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'b'
  number: 1 
  description: 'All 8 edges next to each other.'
  algorithm: "/ 2,4 / 1,2 / -3,-3 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'b'
  number: 2 
  description: '7 edges next to each other.'
  algorithm: "/ -2,0 / 3,-4 / -2,0 / 3,0 / 2,4 / 1,2 / -3,-3 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'b'
  number: 3 
  description: '6 edges next to each other.'
  algorithm: "/ 0,2 / 4,0 / 2,4 / 1,2 / -3,-3 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'b'
  number: 4 
  description: '5 edges next to each other.'
  algorithm: "/ -2,0 / 2,0 / -2,0 / 3,-4 / -2,0 / 3,0 / 2,4 / 1,2 / -3,-3 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'b'
  number: 5 
  description: '4 edges next to each other.'
  algorithm: "/ 2,2 / 1,2 / -3,-3 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'c'
  number: 1 
  description: 'Swap top layer with bottom layer.'
  algorithm: "/ 6,6 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'c'
  number: 2 
  description: 'Restore middle layer to square shape.'
  algorithm: "/ 6,0 / 6,0 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'd'
  number: 1 
  description: 'Swap corner from top layer with bottom layer.'
  algorithm: "1,0 / 0,3 / -1,0"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'd'
  number: 2 
  description: 'Swap two adjacent corners from top layer with bottom layer.'
  algorithm: "1,0 / -1,0"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'd'
  number: 3 
  description: 'Swap two diagonal corners from top layer with bottom layer.'
  algorithm: "1,0 / 3,3 / -1,0"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'e'
  number: 1 
  description: 'Swap right facing edge on top layer with back facing edge on bottom layer. Repeat for other swapped corners.'
  algorithm: "1,0 / 3,0 / 3,0 / -1,-1 / -2,1 / -3,0 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'e'
  number: 2 
  description: 'Swap opposite edges on top with opposite edges on bottom.'
  algorithm: "1,0 / -1,-1 / 0,1"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'f'
  number: 1 
  description: 'Swap two corners on the front of the down layer. Repeat for other swapped corners.'
  algorithm: "/ 3,-3 / 0,3 / -3,0 / 3,0 / -3,0 /"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'g'
  number: 1 
  description: 'Swap back facing edge with right facing edge on both layers. Repeat for other swapped corners.'
  algorithm: "-2,0 / 3,0 / -1,-1 / -2,1 / 2,0"
- guide: 'square-1-vanderbergh'
  phase: null
  section: 'h'
  number: 1 
  description: 'Only two swapped edges remain. Perfom algorithm, to cycle top layer edges, then repeat the previous step until solved.'
  algorithm: "/ 3,3 / 1,0 / -2,-2 / 2,0 / 2,2 / -1,0 / -3,-3 / 0,2 / -2,-2 / 2,0"
- guide: '3x3x3-cfop-fridrich'
  phase: 1 
  section: 'a'
  number: null 
  description: 'Rotate faces until a cross is formed.'
  algorithm: "Combination of R, L, F, B, U and/or D."
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'a'
  number: 1 
  description: 'Edge placed but not oriented correctly.'
  algorithm: "(R U' R') Dw (R' U<sup>2</sup>) (R U<sup>2</sup>) (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'a'
  number: 2 
  description: 'Rotate edge clackwise to match corner.'
  algorithm: "(U R U' R') Dw' (L' U L)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'a'
  number: 3 
  description: 'Rotate edge anti-clackwise to match corner.'
  algorithm: "Dw' (L' U L) Dw (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'b'
  number: 1 
  description: 'Corner with bottom facing up.'
  algorithm: "(R U R' U') (R U R' U') (R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'b'
  number: 2 
  description: 'Corner with bottom facing right.'
  algorithm: "Dw (R' U) (R U<sup>2</sup>) (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'b'
  number: 3 
  description: 'Corner with bottom facing front.'
  algorithm: "U' (R U') (R' U<sup>2</sup>) (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'c'
  number: 1 
  description: 'Edge correctly positioned and oriented.'
  algorithm: "(R<sup>2</sup> U<sup>2</sup>) (R' U' R U') (R' U<sup>2</sup> R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'c'
  number: 2 
  description: 'Edge correctly positioned, but flipped.'
  algorithm: "(R U' R U) y (R U') (R' F<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'c'
  number: 3 
  description: 'Slot edge in place clockwise and rotate corner.'
  algorithm: "U<sup>2</sup> (R U' R') y (L' U' L)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'c'
  number: 4 
  description: 'Slot edge in place anti-clockwise and rotate corner.'
  algorithm: "(R U') (R' U) (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'd'
  number: 1 
  description: 'Rotate corner.'
  algorithm: "(R U<sup>2</sup>) (R U R' U) (R U<sup>2</sup> R<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'd'
  number: 2 
  description: 'Flip edge and rotate corner.'
  algorithm: "(R U' R') (F' L' U<sup>2</sup>) (L F)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'd'
  number: 3 
  description: 'Slot edge in place clockwise and rotate corner.'
  algorithm: "(R U<sup>2</sup> R') y' (R' U<sup>2</sup> R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'd'
  number: 4 
  description: 'Slot edge in place anti-clockwise and rotate corner.'
  algorithm: "(R U R' U') (R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 1 
  description: 'Move already matched up pair into position.'
  algorithm: "(R U' R' Dw) (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 2 
  description: 'Break up and match pair together, then slot in.'
  algorithm: "L' U<sup>2</sup> L U) (L' U' L)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 3 
  description: 'Break up and match pair together, then slot in.'
  algorithm: "U<sup>2</sup> (R<sup>2</sup> U<sup>2</sup>) (R' U' R U' R<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 4 
  description: 'Match up pair and slot into position.'
  algorithm: "Dw' (L' U<sup>2</sup> L U') (L' U L)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 5 
  description: 'Match up pair and slot into position.'
  algorithm: "U<sup>2</sup> (R U R' U) (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 6 
  description: 'Break up pair and match up, then slot into position.'
  algorithm: "(R U<sup>2</sup> R' U') (R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 7 
  description: 'Break up pair and match up, then slot into position.'
  algorithm: "U<sup>2</sup> (L<sup>2</sup> U<sup>2</sup>) (L U L' U L<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 8 
  description: 'Match up pair and slot into position.'
  algorithm: "U (R U<sup>2</sup> R' U) (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'e'
  number: 9 
  description: 'Match up pair and slot into position.'
  algorithm: "(F' L' U<sup>2</sup>) (L F)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 1 
  description: 'Break Pair, then match up and slot into position.'
  algorithm: "Dw (R' U' R Dw') (R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 2 
  description: 'Pair matched, move and slot into position.'
  algorithm: "Dw' (L' U L)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 3 
  description: 'Break Pair, then match up and slot into position.'
  algorithm: "Dw (R' U<sup>2</sup> R Dw') (R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 4 
  description: 'Match up pair and slot into position.'
  algorithm: "Dw (R' U' R U<sup>2</sup>) (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 5 
  description: 'Match up pair and slot into position.'
  algorithm: "Dw (R' U R Dw') (R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 6 
  description: 'Break pair, then match up and slot into position.'
  algorithm: "U' (R U' R' U) (R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 7 
  description: 'Break pair, then match up and slot into position.'
  algorithm: "(R U') (R' U<sup>2</sup>) y' (R' U' R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 8 
  description: 'Match up pair and slot into position.'
  algorithm: "(R U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'f'
  number: 9 
  description: 'Match up pair and slot into position.'
  algorithm: "Dw (R' U<sup>2</sup> R U<sup>2</sup>) (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 1 
  description: 'Break pair, then match up and slot into position.'
  algorithm: "U' (R U R' Dw) (R' U' R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 2 
  description: 'Break pair, then match up and slot into position.'
  algorithm: "Dw (R' U R U') (R' U' R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 3 
  description: 'Break pair, then match up and slot into position.'
  algorithm: "Lw U L F') (L' U' Lw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 4 
  description: 'Match up pair and slot into position.'
  algorithm: "(L' U' L)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 5 
  description: 'Match up pair and slot into position.'
  algorithm: "U' (R U<sup>2</sup> R' U<sup>2</sup>) (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 6 
  description: 'Break pair, then match up and slot into position.'
  algorithm: "U (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 7 
  description: 'Break pair, then match up and slot into position.'
  algorithm: "U' (R U<sup>2</sup> R' Dw) (R' U' R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 8 
  description: 'Match up pair and slot into position.'
  algorithm: "U' (R U R' U<sup>2</sup>) (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 2 
  section: 'g'
  number: 9 
  description: 'Match up pair and slot into position.'
  algorithm: "U' (R U' R' Dw) (R' U' R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'a'
  number: 1 
  description: 'Flip left and back edges.'
  algorithm: "(M' U M) U<sup>2</sup> (M' U M)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'a'
  number: 2 
  description: 'Flip front and back edges.'
  algorithm: "(R U R' U') (M' U R U') Rw'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'a'
  number: 3 
  description: 'Flip all edges.'
  algorithm: "Rw' (R U) (R U R' U' Rw<sup>2</sup>) (R<sup>2</sup>) U) (R U') Rw'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'b'
  number: 1 
  description: 'Two corners facing front.'
  algorithm: "(R<sup>2</sup> D) (R' U<sup>2</sup>) (R D') (R' U<sup>2</sup> R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'b'
  number: 2 
  description: 'Two corners facing out.'
  algorithm: "(Lw' U') (L U) (R U') (Rw' F)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'b'
  number: 3 
  description: 'Two opposite corners facing out.'
  algorithm: "(R' F) (R B') (R' F') (R B)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'b'
  number: 4 
  description: 'Three corners facing out.'
  algorithm: "(R U R' U) (R U<sup>2</sup> R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'b'
  number: 5 
  description: 'Three corners facing out.'
  algorithm: "(R U<sup>2</sup>) (R' U' R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'b'
  number: 6 
  description: 'Two corners facing left, two corners facing out.'
  algorithm: "(R U<sup>2</sup>) (R<sup>2</sup> U') (R<sup>2</sup> U') (R<sup>2</sup> U<sup>2</sup> R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'b'
  number: 7 
  description: 'Two corners facing back, two corners facing front.'
  algorithm: "(R U<sup>2</sup>) (R' U' R U R' U' R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'c'
  number: 1 
  description: 'Only one corner facing up.'
  algorithm: "Fw (R U R' U') Fw' U' F (R U R' U') F'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'c'
  number: 2 
  description: 'Only one corner facing up.'
  algorithm: "Fw (R U R' U') Fw' U F (R U R' U') F'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'c'
  number: 3 
  description: 'Two opposite corners facing up.'
  algorithm: "(R U R' U) (R' F R F') U<sup>2</sup> (R' F R F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'c'
  number: 4 
  description: 'Two corners on one side facing up.'
  algorithm: "Rw' (R U) (R U R' U' Rw) x (R<sup>2</sup> U) (R U')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'c'
  number: 5 
  description: 'Two corners on one side facing up.'
  algorithm: "F (R U R' U) y' (R' U<sup>2</sup>) (R' F R F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'c'
  number: 6 
  description: 'No corners facing up.'
  algorithm: "F (R U R' U') S (R U R' U') Fw'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'c'
  number: 7 
  description: 'No corners facing up.'
  algorithm: "(R U<sup>2</sup>) (R<sup>2</sup> F R F') U<sup>2</sup> (R' F R F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'd'
  number: 1 
  description: 'Incorrect pieces facing front and back.'
  algorithm: "(R U R' U') (R' F R F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'd'
  number: 2 
  description: 'Incorrect pieces facing front, back and side.'
  algorithm: "F (R U R' U') F'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'e'
  number: 1 
  description: 'd shape on right, opposite side pieces facing left.' 
  algorithm: "Fw (R U R' U') Fw'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'e'
  number: 2 
  description: 'b shape on left, opposite side pieces facing right.' 
  algorithm: "Fw' (L' U' L U) Fw"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'e'
  number: 3 
  description: 'd shape on right, only one piece opposite facing left.' 
  algorithm: "(R Dw) (L' Dw') (R' U) (Lw U Lw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'e'
  number: 4 
  description: 'q shape on right, only one piece opposite facing left.' 
  algorithm: "(R' U') F (U R U' R') F' R"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'f'
  number: 1 
  description: 'Two pieces on the side facing right on the front.' 
  algorithm: "(R U R' U) (R U' R' U') (R' F R F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'f'
  number: 2 
  description: 'Two pieces on the side facing left on the front.' 
  algorithm: "(L' U' L U') (L' U L U) (L F' L' F)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'g'
  number: 1 
  description: 'Left side pieces facing left. Right side pieces facing right.' 
  algorithm: "(Rw U) (R' U) (R U') (R' U) (R U<sup>2</sup> Rw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'g'
  number: 2 
  description: 'Left side pieces facing left. Right side pieces facing right.' 
  algorithm: "(Rw' U') (R U') (R' U) (R U') (R' U<sup>2</sup> Rw)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'g'
  number: 3 
  description: 'Left side pieces facing left. Two pieces facing back.' 
  algorithm: "(R B' R B R<sup>2</sup>) U<sup>2</sup> (F R' F' R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'g'
  number: 4 
  description: 'Left side pieces facing left. Two pieces facing front.' 
  algorithm: "(R' F R' F' R<sup>2</sup>) U<sup>2</sup> y (R' F R F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'g'
  number: 5 
  description: 'Two pieces facing left. Two pieces facing front.' 
  algorithm: "F (R U R' U') (R U R' U') F'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'g'
  number: 6 
  description: 'Two pieces facing right. Two pieces facing front.' 
  algorithm: "F' (L' U' L U) (L' U' L U) F"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'h'
  number: 1 
  description: 'Two pieces facing back on the back left.' 
  algorithm: "(L F') (L' U' L U) F U' L'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'h'
  number: 2 
  description: 'Two pieces facing back on the back right.' 
  algorithm: "(R' F) (R U R' U') F' U R"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'i'
  number: 1 
  description: 'Three pieces on one side facing different directions.' 
  algorithm: "(R U R<sup>2</sup> U') (R' F) (R U) (R U') F'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'i'
  number: 2 
  description: 'Three pieces on one side facing the same directions' 
  algorithm: "(R' U') (R' F R F') (U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'j'
  number: 1 
  description: 'Opposite corner of square shape facing back.' 
  algorithm: "(Rw' U<sup>2</sup>) (R U R' U Rw)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'j'
  number: 2 
  description: 'Opposite corner of square shape facing front.' 
  algorithm: "(Rw U<sup>2</sup>) (R' U' R U' Rw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'k'
  number: 1 
  description: 'Two pieces facing right and two pieces facing front.' 
  algorithm: "(Rw U R' U) (R U<sup>2</sup> Rw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'k'
  number: 2 
  description: 'Two pieces facing back on the left.' 
  algorithm: "(M U<sup>2</sup>) (R' U' R U') (R' U<sup>2</sup> R) U M'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'k'
  number: 3 
  description: 'Two pieces facing right and two pieces facing back.' 
  algorithm: "(Rw' U' R U') (R' U<sup>2</sup> Rw)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'k'
  number: 4 
  description: 'Two pieces facing back on the right.' 
  algorithm: "Rw' (R<sup>2</sup> U R' U R U<sup>2</sup> R') U M'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'l'
  number: 1 
  description: 'Big square with pairs of pieces facing out.' 
  algorithm: "F (R U') (R' U' R U) (R' F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'l'
  number: 2 
  description: 'Big square with individual pieces facing out.' 
  algorithm: "(R U<sup>2</sup>) (R<sup>2</sup>) F) (R F' R U<sup>2</sup> R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'l'
  number: 3 
  description: 'L shape on the left with two pieces facing back.' 
  algorithm: "(R U R' U) (R' F R F') (R U<sup>2</sup> R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'l'
  number: 4 
  description: 'L shape on the left with two pieces facing front.' 
  algorithm: "(R U R' U' R' F) (R<sup>2</sup> U R' U' F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'm'
  number: 1 
  description: 'Two pieces facing back and two pieces facing front.' 
  algorithm: "Fw (R U R' U') (R U R' U') Fw'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'm'
  number: 2 
  description: 'Three pieces facing right, one piece facing left.' 
  algorithm: "(R U R' U R Dw') (R U' R' F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'm'
  number: 3 
  description: 'No pairs of pieces facing out.' 
  algorithm: "Fw (R U R' U') Fw' F (R U R' U') (R U R' U') F'"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'm'
  number: 4 
  description: 'Three pieces facing left and three pieces facing right.' 
  algorithm: "(R U<sup>2</sup>) (R<sup>2</sup> U' R U' R' U<sup>2</sup>) (F R F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'n'
  number: 1 
  description: 'L Shape with two pieces facing front and two pieces facing back.' 
  algorithm: "(Rw U' Rw' U') (Rw U Rw') y' (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'n'
  number: 2 
  description: 'L Shape with two pieces facing front.' 
  algorithm: "(Rw U Rw') (R U R' U') (Rw U' Rw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'n'
  number: 3 
  description: 'Backwards L Shape with two pieces facing front and back.' 
  algorithm: "(R' F) (R U R' F' R) y' (R U' R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'n'
  number: 4 
  description: 'Backwards L Shape with two pieces facing front.' 
  algorithm: "(Lw' U' Lw) (L' U' L U) (Lw' U Lw)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'o'
  number: 1 
  description: 'S shape with pieces facing out.' 
  algorithm: "(R U') (R' U<sup>2</sup>) (R U) y (R U') (R' U' F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'o'
  number: 2 
  description: 'S shape with two pieces facing left.' 
  algorithm: "(R<sup>2</sup> U R' B') (R U') (R<sup>2</sup> U) (Lw U Lw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'o'
  number: 3 
  description: 'Z shape with pieces facing out.' 
  algorithm: "(L' U) (L U<sup>2</sup>) (L' U') y' (L' U) (L U F)"
- guide: '3x3x3-cfop-fridrich'
  phase: 3 
  section: 'o'
  number: 4 
  description: 'Z shape with two pieces facing right.' 
  algorithm: "(L<sup>2</sup> U' L B) (L' U) (L<sup>2</sup> U') (Rw' U' Rw)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'a'
  number: 1 
  description: 'Cycle 3 corners clockwise' 
  algorithm: "x (R' U R') D<sup>2</sup> (R U' R') D<sup>2</sup> R<sup>2</sup>"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'a'
  number: 2 
  description: 'Cycle 3 corners anti-clockwise' 
  algorithm: "x R<sup>2</sup> D<sup>2</sup> (R U R') D<sup>2</sup> (R U' R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'a'
  number: 3 
  description: 'Cycle 2 pairs of corners parallel' 
  algorithm: "x' (R U') (R' D) (R U R' D') (R U R' D) (R U') (R' D')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'b'
  number: 1 
  description: 'Cycle 3 edges anti-clockwise.' 
  algorithm: "(R U' R U) (R U) (R U') (R' U' R<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'b'
  number: 2 
  description: 'Cycle 3 edges clockwise.' 
  algorithm: "(R<sup>2</sup> U) (R U R' U') (R' U') (R' U R')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'b'
  number: 3 
  description: 'Swap opposite edges.' 
  algorithm: "(M<sup>2</sup> U) (M<sup>2</sup> U<sup>2</sup>) (M<sup>2</sup> U) (M<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'b'
  number: 4 
  description: 'Swap adjacent edges in parallel.' 
  algorithm: "(M<sup>2</sup> U) (M<sup>2</sup> U) (M' U<sup>2</sup>) (M<sup>2</sup> U<sup>2</sup>) (M' U<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'c'
  number: 1 
  description: 'Swap two corners on the back and swap left and back edges.' 
  algorithm: "(R' U L') U<sup>2</sup> (R U' R') U<sup>2</sup> (L R U')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'c'
  number: 2 
  description: 'Swap two corners on the right and swap right and front edges.' 
  algorithm: "(R U R' F') (R U R' U') (R' F) (R<sup>2</sup> U') (R' U')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'c'
  number: 3 
  description: 'Swap two corners on the right and swap right and left edges.' 
  algorithm: "(R U R' U') (R' F) (R<sup>2</sup> U') (R' U' R U) (R' F')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'c'
  number: 4 
  description: 'Swap two corners on the back and swap right and front edges.' 
  algorithm: "(R' U<sup>2</sup>) (R U<sup>2</sup>) (R' F R U R' U') (R' F' R<sup>2</sup> U')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'c'
  number: 5 
  description: 'Swap two corners on the right and swap left and back edges.' 
  algorithm: "(R U R' F') (R U<sup>2</sup> R' U<sup>2</sup>) (R' F) (R U) (R U<sup>2</sup> R' U')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'c'
  number: 6 
  description: 'Swap two corners on the right and swap front and back edges.' 
  algorithm: "R' U' F' (R U R' U') (R' F) (R<sup>2</sup> U') (R' U' R U) (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'd'
  number: 1 
  description: 'Cycle corners clockwise and edges anticlockwise.' 
  algorithm: "(R<sup>2</sup> Uw) (R' U R' U' R Uw') R<sup>2</sup> y' (R' U R)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'd'
  number: 2 
  description: 'Cycle corners anticlockwise and edges clockwise.' 
  algorithm: "(R' U' R) y (R<sup>2</sup> Uw R' U) (R U' R Uw' R<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'd'
  number: 3 
  description: 'Cycle corners anticlockwise and edges clockwise.' 
  algorithm: "(R<sup>2</sup> Uw' R U') (R U R' Uw R<sup>2</sup>) (Fw R' Fw')"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'd'
  number: 4 
  description: 'Cycle corners anticlockwise and edges clockwise.' 
  algorithm: "(R U R') y' (R<sup>2</sup> Uw' R U') (R' U R' Uw R<sup>2</sup>)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'e'
  number: 1 
  description: 'Swap two edges and corners parallel diagonally.' 
  algorithm: "(R' U R' Dw') (R' F' R<sup>2</sup> U') (R' U R' F) (R F)"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'e'
  number: 2 
  description: 'Swap two corners diagonally. Swap two opposite edges.' 
  algorithm: "z U (R' D) (R<sup>2</sup> U' R D' U) (R' D) (R<sup>2</sup> U' R D') R"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'e'
  number: 3 
  description: 'Swap two corners diagonally. Swap two opposite edges.' 
  algorithm: "z D' (R U') (R<sup>2</sup> D R' U D') (R U') (R<sup>2</sup> D R' U) R'"
- guide: '3x3x3-cfop-fridrich'
  phase: 4 
  section: 'e'
  number: 4 
  description: 'Swap two edges and corners perpendicular diagonally.' 
  algorithm: "(F R U') (R' U' R U) (R' F') (R U R' U') (R' F R F')"
- guide: '4x4x4-reduction'
  phase: 1 
  section: 'a'
  number: null 
  description: 'Move center pieces around.' 
  algorithm: "-"
- guide: '4x4x4-reduction'
  phase: 1 
  section: 'b'
  number: null 
  description: 'Move center pieces around.' 
  algorithm: "-"
- guide: '4x4x4-reduction'
  phase: 1 
  section: 'c'
  number: 1 
  description: 'Move one center piece.' 
  algorithm: "d' F' d"
- guide: '4x4x4-reduction'
  phase: 1 
  section: 'c'
  number: 2 
  description: 'Move two adjacent center pieces.' 
  algorithm: "d' F<sup>2</sup> d"
- guide: '4x4x4-reduction'
  phase: 1 
  section: 'c'
  number: 3 
  description: 'Move two diagonal center pieces.' 
  algorithm: "d' F' d F<sup>2</sup> d' F' d"
- guide: '4x4x4-reduction'
  phase: 2 
  section: 'a'
  number: 1 
  description: 'Pair up edges in same layer.' 
  algorithm: "d R F' U R' F d'"
- guide: '4x4x4-reduction'
  phase: 2 
  section: 'a'
  number: 2 
  description: 'Pair up edges in different layer.' 
  algorithm: "u'"
- guide: '4x4x4-reduction'
  phase: 2 
  section: 'b'
  number: null 
  description: 'Store pair in up layer.' 
  algorithm: "R U' R'"
- guide: '4x4x4-reduction'
  phase: 2 
  section: 'c'
  number: 1 
  description: 'Pair up edge in same layer.' 
  algorithm: "d R F' U R' F d'"
- guide: '4x4x4-reduction'
  phase: 2 
  section: 'c'
  number: 2 
  description: 'Pair up edge in different layer.' 
  algorithm: "(R F' U R' F) (d R F' U R' F d')"
- guide: '4x4x4-reduction'
  phase: 3 
  section: 'a'
  number: null 
  description: 'Use any method of solving a 3x3 cube.' 
  algorithm: "-"
- guide: '4x4x4-reduction'
  phase: 4 
  section: 'a'
  number: 1 
  description: 'Only one pair of edges not oriented correctly.' 
  algorithm: "(r<sup>2</sup> B<sup>2</sup> U<sup>2</sup> l) (U<sup>2</sup> r' U<sup>2</sup> r) (U<sup>2</sup> F<sup>2</sup> r F<sup>2</sup>) (l' B2 r<sup>2</sup>)"
- guide: '4x4x4-reduction'
  phase: 4 
  section: 'a'
  number: 2 
  description: 'Two opposite edge pairs not oriented correctly.' 
  algorithm: "Uw<sup>2</sup> Lw<sup>2</sup> U<sup>2</sup> l<sup>2</sup> U<sup>2</sup> Lw<sup>2</sup> Uw<sup>2</sup>"
- guide: '4x4x4-reduction'
  phase: 4 
  section: 'a'
  number: 3 
  description: 'Two adjacent edge pairs not oriented correctly.' 
  algorithm: "L<sup>2</sup> D Fw<sup>2</sup> Lw<sup>2</sup> F<sup>2</sup> l<sup>2</sup> F<sup>2</sup> Lw<sup>2</sup> Fw<sup>2</sup> D' L<sup>2</sup>"
- guide: '4x4x4-reduction'
  phase: 4 
  section: 'a'
  number: 4 
  description: 'Two adjacent corners not oriented correctly.' 
  algorithm: "Uw<sup>2</sup> Lw<sup>2</sup> U<sup>2</sup> l<sup>2</sup> U<sup>2</sup> Lw<sup>2</sup> Uw<sup>2</sup> F' U' F U F R' F<sup>2</sup> U F U F' U' F R"
- guide: '4x4x4-reduction'
  phase: 4 
  section: 'a'
  number: 5 
  description: 'Two opposite corners not oriented correctly.' 
  algorithm: "Uw<sup>2</sup> Lw<sup>2</sup> U<sup>2</sup> l<sup>2</sup> U<sup>2</sup> Lw<sup>2</sup> Uw<sup>2</sup> R U' L U<sup>2</sup> R' U R L' U' L U<sup>2</sup> R' U L' U"
- guide: 'megaminx-beginners'
  phase: 1
  section: 'a'
  number: null 
  description: 'Move edges to down layer to make a star shape.'
  algorithm: '-'
- guide: 'megaminx-beginners'
  phase: 1
  section: 'b'
  number: 1 
  description: 'Down edge facing right.'
  algorithm: "R U R'"
- guide: 'megaminx-beginners'
  phase: 1
  section: 'b'
  number: 2 
  description: 'Down edge facing front.'
  algorithm: "F' U' F"
- guide: 'megaminx-beginners'
  phase: 1
  section: 'b'
  number: 3 
  description: 'Down edge facing up.'
  algorithm: "R U' R' U<sup>2</sup> R U R'"
- guide: 'megaminx-beginners'
  phase: 1
  section: 'c'
  number: 1 
  description: 'Edge needs to be rotated clockwise around center.'
  algorithm: "(U R U' R') (U' F' U F)" 
- guide: 'megaminx-beginners'
  phase: 1
  section: 'c'
  number: 2 
  description: 'Edge needs to be rotated anti-clockwise around center.'
  algorithm: "(U' F' U F) (U R U' R')" 
- guide: 'megaminx-beginners'
  phase: 2 
  section: 'a'
  number: null 
  description: 'Move corners in place without disturbing first two layers.'
  algorithm: '-'
- guide: 'megaminx-beginners'
  phase: 2 
  section: 'b'
  number: 1 
  description: 'Move edge to the right of the corner.'
  algorithm: "F L F<sup>2</sup> L' F'"
- guide: 'megaminx-beginners'
  phase: 2 
  section: 'b'
  number: 2 
  description: 'Move edge to the left of the corner.'
  algorithm: "F' R' F'<sup>2</sup> R F" 
- guide: 'megaminx-beginners'
  phase: 3  
  section: 'a'
  number: 1 
  description: 'Down edge facing right.'
  algorithm: "R U R'"
- guide: 'megaminx-beginners'
  phase: 3 
  section: 'a'
  number: 2 
  description: 'Down edge facing front.'
  algorithm: "F' U' F" 
- guide: 'megaminx-beginners'
  phase: 3 
  section: 'a'
  number: 3 
  description: 'Down edge facing up.'
  algorithm: "R U' R' U<sup>2</sup> R U R'" 
- guide: 'megaminx-beginners'
  phase: 3 
  section: 'b'
  number: 1 
  description: 'Edge needs to be rotated clockwise around center.'
  algorithm: "(U R U' R') (U' F' U F)"
- guide: 'megaminx-beginners'
  phase: 3 
  section: 'b'
  number: 2 
  description: 'Edge needs to be rotated anti-clockwise around center.'
  algorithm: "(U' F' U F) (U R U' R')" 
- guide: 'megaminx-beginners'
  phase: 4 
  section: 'a'
  number: 1 
  description: 'Two adjacent edges facing out.'
  algorithm: "F (U R U' R') F'" 
- guide: 'megaminx-beginners'
  phase: 4 
  section: 'a'
  number: 2 
  description: 'Two opposite edges facing out.'
  algorithm: "F (R U R' U') F'" 
- guide: 'megaminx-beginners'
  phase: 4 
  section: 'b'
  number: 1 
  description: 'Cycle three edges clockwise.'
  algorithm: "(R U R' U) (R U<sup>3</sup> R' U)" 
- guide: 'megaminx-beginners'
  phase: 4 
  section: 'b'
  number: 2 
  description: 'Cycle three edges anti-clockwise.'
  algorithm: "(U' R U<sup>2</sup> R') (U' R U' R')" 
- guide: 'megaminx-beginners'
  phase: 4 
  section: 'c'
  number: 1 
  description: 'Cycle three corners clockwise.'
  algorithm: "(L' U<sup>2</sup> R U'<sup>2</sup>) (L U<sup>2</sup> R' U'<sup>2</sup>)" 
- guide: 'megaminx-beginners'
  phase: 4 
  section: 'c'
  number: 2 
  description: 'Cycle three corners anti-clockwise.'
  algorithm: "(R U'<sup>2</sup> L' U<sup>2</sup>) (R' U'<sup>2</sup> L U<sup>2</sup>)" 
- guide: 'megaminx-beginners'
  phase: 4 
  section: 'd'
  number: null 
  description: 'Corner rotating algorithm.'
  algorithm: "R' D' R D"
- guide: '2x2x3-cuboid'
  phase: null
  section: 'a'
  number: 1
  description: 'Faces Solved. Move to next step.'
  algorithm: '-'
- guide: '2x2x3-cuboid'
  phase: null
  section: 'a'
  number: 2 
  description: 'Swap one corner.'
  algorithm: "D' R<sup>2</sup> D R<sup>2</sup>"
- guide: '2x2x3-cuboid'
  phase: null
  section: 'a'
  number: 3 
  description: 'Swap two adjacent corners.'
  algorithm: 'R<sup>2</sup>'
- guide: '2x2x3-cuboid'
  phase: null
  section: 'a'
  number: 4 
  description: 'Swap two diagonal corners.'
  algorithm: 'R<sup>2</sup> y D<sup>2</sup> R<sup>2</sup>'
- guide: '2x2x3-cuboid'
  phase: null
  section: 'b'
  number: 1 
  description: 'Swap 2 pairs of adjacent corners.'
  algorithm: "(R<sup>2</sup> U' R<sup>2</sup>) (U<sup>2</sup> y) (R<sup>2</sup> U' R<sup>2</sup>)"
- guide: '2x2x3-cuboid'
  phase: null
  section: 'b'
  number: 2 
  description: 'Swap 2 pairs of diagonal corners.'
  algorithm: 'R<sup>2</sup> F<sup>2</sup> R<sup>2</sup>'
- guide: '2x2x3-cuboid'
  phase: null
  section: 'b'
  number: 3 
  description: 'Swap 1 pair of adjacent corners.'
  algorithm: "(R<sup>2</sup> U R<sup>2</sup> U') (R<sup>2</sup> F<sup>2</sup>) (U' F<sup>2</sup> U F<sup>2</sup>)"
- guide: '2x2x3-cuboid'
  phase: null
  section: 'c'
  number: 1 
  description: 'Flip middle layer.'
  algorithm: 'R<sup>2</sup> H<sup>2</sup> R<sup>2</sup>'
- guide: '2x2x3-cuboid'
  phase: null
  section: 'c'
  number: 2 
  description: 'Swap two adjacent edges.'
  algorithm: 'R<sup>2</sup> Uw<sup>2</sup> R<sup>2</sup> U<sup>2</sup> R<sup>2</sup> D<sup>2</sup>'
- guide: '2x2x3-cuboid'
  phase: null
  section: 'c'
  number: 3 
  description: 'Swap two diagonal edges.'
  algorithm: 'R<sup>2</sup> H<sup>2</sup> R<sup>2</sup>'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'a'
  number: 1
  description: 'No Up Corners sticking out. Move to step B.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'a' 
  number: 2
  description: 'One Corner Sticking Out of U Layer. Move to step B.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'a'
  number: 3
  description: 'Two Corners Sticking Out of U Layer. Move to step B.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'a'
  number: 4
  description: 'Three Corners Sticking Out of U Layer. Rotate U Layer.'
  algorithm: 'U'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'a'
  number: 5 
  description: 'Four Corners Sticking Out of U Layer. Rotate U Layer.'
  algorithm: 'U'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'b'
  number: 1
  description: 'No Down Corners sticking out. Move to step E.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'b'
  number: 2 
  description: 'One Corner Sticking Out of D Layer. Move to step C.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'b'
  number: 3 
  description: 'Two Corners Sticking Out of D Layer. Move to step C.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'b'
  number: 4
  description: 'Three Corners Sticking Out of D Layer. Rotate D Layer.'
  algorithm: 'D'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'b'
  number: 5
  description: 'Four Corners Sticking Out of D Layer. Rotate D Layer.'
  algorithm: 'D'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'c'
  number: 1
  description: 'Two Corners Sticking out of U and D layers. Bring corners to U Layer, facing the front.'
  algorithm: 'Combination of B, D, Lw'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'c'
  number: 2
  description: 'Four Corners Stickout out of U and D Layers. Bring at least three corners to U Layer, then turn U. Then bring corners to the U Layer, facing the front.'
  algorithm: 'Combination of B D Lw, then U'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'd'
  number: null
  description: 'Two Corners Sticking out of Front U layer. Perform algorithm so that they do not stick out.'
  algorithm: "Rw U' B U B U"
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'e'
  number: 1
  description: 'No edges sticking out. Go to step I.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'e'
  number: 2
  description: 'Edge sticking out. Move edge to U Layer, facing the back.'
  algorithm: 'F, U and/or B'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'f'
  number: 1
  description: 'Sunken edge on top left. Go to step G.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'f'
  number: 2
  description: 'Sunken edge not on top left. Move edge to U Layer, facing the left.'
  algorithm: 'Rw, Lw and/or D'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'g'
  number: null
  description: 'Edge sticking out of back and sunken on left. Swap Edges.'
  algorithm: "Lw D' Lw F Rw U" 
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'h'
  number: null
  description: 'Repeat steps E-G until no edges stick out of U and D Layers.'
  algorithm: '-' 
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'i'
  number: 1
  description: 'No u Corners sticking out. Go to step J.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'i'
  number: 2
  description: 'One Corner Sticking Out of u Layer. Go to step J.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'i'
  number: 3
  description: 'Two Corners Sticking Out of u Layer. Go to step J.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'i'
  number: 4
  description: 'Three Corners Sticking Out of u Layer. Rotate u Layer.'
  algorithm: 'u'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'i'
  number: 5
  description: 'Four Corners Sticking Out of u Layer. Rotate u Layer.'
  algorithm: 'u'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'j'
  number: 1
  description: 'No corners sticking out of d Layer. Go to step M.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'j'
  number: 2 
  description: 'One Corner Sticking Out of d Layer. Go to step K.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'j'
  number: 3 
  description: 'Two corners sticking out of d Layer. Go to step K.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'j'
  number: 4 
  description: 'Three corners sticking out of d Layer. Rotate d Layer.'
  algorithm: 'd'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'j'
  number: 5 
  description: 'Four corners sticking out of d Layer. Rotate d Layer.'
  algorithm: 'd'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'k'
  number: 1
  description: 'Two Corners Sticking out of u and d layers. Bring corners to u layer, facing the front.'
  algorithm: 'Combination of B, d, Lw'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'k'
  number: 2
  description: 'Four Corners Stickout out of u and d Layers. Bring at least three corners to u, then turn u. Then bring corners to the u layer, facing the front.'
  algorithm: 'Combination of B d Lw, then u'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'l'
  number: null
  description: 'Two corners sticking out of u layer, facing the front. Perform algorithm so they do not stick out.' 
  algorithm: "Rw u' B u B u"
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'm'
  number: 1 
  description: 'No edges sticking out. Go to phase 2.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'm'
  number: 2 
  description: 'Edge sticking out. Move edge to u Layer, facing the back.'
  algorithm: 'F, u and/or B'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'n'
  number: 1 
  description: 'Sunken edge on u layer, facing left. Go to step O.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'n'
  number: 2
  description: 'Sunken edge not on u layer, facing left. Rotate until sunken edge is on u layer, facing left.'
  algorithm: 'Rw, Lw and/or d'
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'o'
  number: null
  description: 'Edge sticking out of back and sunken edge on left. Swap edges.'
  algorithm: "Lw d' Lw F Rw u"
- guide: '3x4x5-cuboid'
  phase: 1
  section: 'p'
  number: null
  description: 'Repeat steps M-O until no edges stick out of u and d Layers.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'a'
  number: 1 
  description: 'Up Back Left Corner at Up Back Left. Go to step B.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'a'
  number: 2 
  description: 'Up Back Left Corner at Down Front Left. Move to Up Back Left.'
  algorithm: 'L'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'a'
  number: 3 
  description: 'Up Back Left Corner at Up Front Right. Move to Up Back Left.'
  algorithm: 'R D<sup>2</sup> L'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'a'
  number: 4 
  description: 'Up Back Left Corner at Down Back Right. Move to Up Back Left.'
  algorithm: 'D<sup>2</sup> L'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'b'
  number: 1 
  description: 'Up Front Left Corner at Up Front Left. Go to Step C.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'b'
  number: 2 
  description: 'Up Front Left Corner at Down Back Left. Move to Up Front Left.'
  algorithm: 'D<sup>2</sup> F'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'b'
  number: 3 
  description: 'Up Front Left Corner at Up Back Right. Move to Up Front Left.'
  algorithm: 'R F'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'b'
  number: 4 
  description: 'Up Front Left Corner at Down Front Right. Move to Up Front Left.'
  algorithm: 'F'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'c'
  number: 1 
  description: 'Up Back Right Corner at Up Back Right. Go to step D.'
  algorithm: 'R and/or D2'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'c'
  number: 2 
  description: 'Up Back Right Corner at Down Back Left. Move to Up Back Right.'
  algorithm: 'D<sup>2</sup> R'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'c'
  number: 3 
  description: 'Up Back Right Corner at Down Front Right. Move to Up Back Right.'
  algorithm: 'R'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'd'
  number: 1
  description: 'Up Front Right Corner at Up Front Right. Go to step E.' 
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'd'
  number: 2
  description: 'Up Front Right Corner at Down Back Left. Move to Up Front Right.'
  algorithm: "D<sup>2</sup> F Rw D' Rw U F U<sup>2</sup> Rw D Rw U"
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'd'
  number: 3
  description: 'Up Front Right Corner at Down Front Right. Move to Up Front Right.'
  algorithm: "F Rw D' Rw U F U<sup>2</sup> Rw D Rw U"
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'e'
  number: 1
  description: 'Up Right Corners and Up Left Corners match faces. Go to Step F.'
  algorithm: '-' 
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'e'
  number: 2
  description: "Up Right Corners and Up Left Corners don't match faces. Swap Corners."
  algorithm: 'R F R'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'f'
  number: 1
  description: 'Down Right Corners and Down Left Corners match faces. Go to Step G.'
  algorithm:  '-' 
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'f'
  number: 2
  description: "Down Right Corners and Down Left Corners don't match faces. Swap Corners."
  algorithm: "Rw U<sup>2</sup> F U Rw F U<sup>2</sup> F U F U<sup>2</sup> Rw U"
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'g'
  number: 1
  description: "All Corners Match. Go to Phase 3."
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 2
  section: 'g'
  number: 2
  description: "Top Corners don't match bottom corners. Rotate Down Layer."
  algorithm: "D<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'a'
  number: 1
  description: "Up Back left Edge at Up Back left. Go to step B."
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'a'
  number: 2
  description: "Up Back left Edge at Up Front right. Move to Up Back left."
  algorithm: "r U<sup>2</sup> r U<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'a'
  number: 3
  description: "Up Back left Edge at Down Front Left. Move to Up Back left."
  algorithm: 'l'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'a'
  number: 4
  description: "Up Back left Edge at Down Back Right. Move to Up Back left." 
  algorithm: "D<sup>2</sup> l D<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'b'
  number: 1
  description: "Up Front left Edge at Up Front left. Go to step C."
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'b'
  number: 2
  description: "Up Front left Edge at Up Back right. Move to Up Front left." 
  algorithm: 'F r F'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'b'
  number: 3
  description: "Up Front left Edge at Down Front right. Move to Up Front left." 
  algorithm: 'r F r F'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'b'
  number: 4
  description: "Up Front left Edge at Down Back Left. Move to Up Front left." 
  algorithm: "D<sup>2</sup> r F r F D<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'c'
  number: 1
  description: "Up Back right Edge at Up Back right. Go to Step D." 
  algorithm: '-' 
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'c'
  number: 2 
  description: "Up Back right Edge at Down Front right. Move to Up Back right."
  algorithm: 'r'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'c'
  number: 3
  description: "Up Back right Edge at Down Back left. Move to Up Back right."
  algorithm: "D<sup>2</sup> r D<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'd'
  number: 1
  description: "Up Front right Edge at Up Front right. Go to Step E."
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'd'
  number: 2
  description: "Up Front right Edge at Down Back right. Move to Up Front right." 
  algorithm: "Lw D Rw U' Lw U Rw D' r D Rw U' Lw U Rw D' Lw r" 
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'd'
  number: 3
  description: "Up Front right Edge at Down Front left. Move to Up Front right." 
  algorithm: "D<sup>2</sup> Lw D Rw U' Lw U Rw D' r D Rw U' Lw U Rw D' Lw r D<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'e'
  number: 1
  description: "Down Layer Edges Correct. Go to Phase 4."
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 3
  section: 'e'
  number: 2
  description: "Down Layer Edges incorrect. Swap edges."
  algorithm: "r D<sup>2</sup> r D<sup>2</sup> r"
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'a'
  number: 1
  description: 'Down Back Edge at Down Back. Go to step B.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'a'
  number: 2
  description: 'Down Back Edge at Down Front. Move to Down Back.'
  algorithm: 'D<sup>2</sup> Rw D<sup>2</sup> Rw D<sup>2</sup> Rw'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'a'
  number: 3
  description: 'Down Back Edge at Up Back. Move to Down Back.'
  algorithm: 'B Rw Lw F Rw Lw'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'a'
  number: 4
  description: 'Down Back Edge at Up Front. Move to Down Back.'
  algorithm: 'U<sup>2</sup> B Rw Lw F Rw Lw U<sup>2</sup>'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'b'
  number: 1 
  description: 'Down Front Edge at Down Front. Go to step C.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'b'
  number: 2 
  description: 'Down Front Edge at Up Back. Move to Down Front.'
  algorithm: 'Rw F Rw U<sup>2</sup> Rw F Rw U<sup>2</sup>'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'b'
  number: 3 
  description: 'Down Front Edge at Up Front. Move to Down Front.'
  algorithm: 'U<sup>2</sup> Rw F Rw U<sup>2</sup> Rw F Rw'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'c'
  number: 1 
  description: 'Up Front Edge and Up Back are in right place. Go to Step D.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'c'
  number: 2  
  description: 'Up Front Edge and Up Back are incorrect. Swap Edges.'
  algorithm: 'U<sup>2</sup> Rw U<sup>2</sup> Rw U<sup>2</sup> Rw'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'd'
  number: 1  
  description: 'Down Left Edge at Down Left. Go to Step E.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'd'
  number: 2  
  description: 'Down Left Edge at Down Right. Move to Down Left.'
  algorithm: 'D<sup>2</sup> F D<sup>2</sup> F D<sup>2</sup> F'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'd'
  number: 3  
  description: 'Down Left Edge at Up Left. Move to Down Left.'
  algorithm: 'Lw F B Rw F B'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'd'
  number: 4  
  description: 'Down Left Edge at Up Right. Move to Down Left.'
  algorithm: 'U<sup>2</sup> Lw F B Rw F B U<sup>2</sup>'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'e'
  number: 1  
  description: 'Down Right Edge at Down Right. Go to Step F.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'e'
  number: 2  
  description: 'Down Right Edge at Up Left. Move to Down Right.'
  algorithm: 'F Rw F U<sup>2</sup> F Rw F U<sup>2</sup>'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'e'
  number: 3  
  description: 'Down Right Edge at Up Right. Move to Down Right.'
  algorithm: 'U<sup>2</sup> F Rw F U<sup>2</sup> F Rw F'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'f'
  number: 1  
  description: 'Up Left and Up Right Edges are correct. Go to Step G.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 4
  section: 'f'
  number: 2  
  description: 'Up Left and Up Right Edges are incorrect. Swap edges.'
  algorithm: 'U<sup>2</sup> F U<sup>2</sup> F U<sup>2</sup> F'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'a'
  number: 1  
  description: 'up Back Left at up Back Left. Go to Step B.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'a'
  number: 2  
  description: 'up Back Left at up Front Right. Move to up Back Left.'
  algorithm: 'u<sup>2</sup>'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'a'
  number: 3  
  description: 'up Back Left at down Front Left. Move to up Back Left.'
  algorithm: 'F u<sup>2</sup> F'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'a'
  number: 4  
  description: 'up Back Left at down Back Right. Move to up Back Left.'
  algorithm: 'L d<sup>2</sup> L'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'b'
  number: 1  
  description: 'up Front Left at up Front Left. Go to Step C.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'b'
  number: 2  
  description: 'up Front Left at down Back Left. Move to up Front Left.'
  algorithm: 'F d<sup>2</sup> F'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'b'
  number: 3  
  description: 'up Front Left at down Front Right. Move to up Front Left.'
  algorithm: 'd<sup>2</sup> F d<sup>2</sup> F'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'b'
  number: 4  
  description: 'up Front Left at up Back Right'
  algorithm: 'R d<sup>2</sup> R F d<sup>2</sup> F.'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'c'
  number: 1  
  description: 'up Back Right at up Back Right. Go to Step D.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'c'
  number: 2  
  description: 'up Back Right at down Back Left. Move to up Back Right.'
  algorithm: 'R d<sup>2</sup> R'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'c'
  number: 3  
  description: 'up Back Right at down Front Right. Move to up Back Right.'
  algorithm: 'd<sup>2</sup> R d<sup>2</sup> R'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'd'
  number: 1  
  description: 'up Front Right at up Front Right. Go to Step E.'
  algorithm: '-'
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'd'
  number: 2  
  description: 'up Front Right at down Front Left. Move to up Front Right.'
  algorithm: "F Rw d' Rw u F u<sup>2</sup> Rw d Rw u"
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'd'
  number: 3  
  description: 'up Front Right at down Back Right. Move to up Front Right.'
  algorithm: "d<sup>2</sup> F Rw d' Rw u F u<sup>2</sup> Rw d Rw u d<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'e'
  number: 1  
  description: 'down Front Right at down Front Right. Go to Step F.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'e'
  number: 2  
  description: 'down Front Right not at down Front Right. Rotate d Layer.'
  algorithm: "d<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'f'
  number: 1  
  description: 'down layer edges correct. Go to Phase 6.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 5 
  section: 'f'
  number: 2  
  description: 'down layer edges incorrect. Swap edges.'
  algorithm: "F Rw u<sup>2</sup> Rw u F u<sup>2</sup> Rw u F u<sup>2</sup> F Rw u"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'a'
  number: 1  
  description: 'Both up left and up right centers are correct. Go to Step B.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'a'
  number: 2  
  description: 'both up left and up right centers are not correct. Swap centers.'
  algorithm: "r F B l F B"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'a'
  number: 3  
  description: 'up left and down right centers are not correct. Swap centers.'
  algorithm: "F r F U<sup>2</sup> F r F U<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'a'
  number: 4  
  description: 'up right and down right centers are not correct. Swap centers.'
  algorithm: "U<sup>2</sup> F r F U<sup>2</sup> F r F"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'b'
  number: 1  
  description: 'both left centers and right centers are correct. Go to Phase 7.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'b'
  number: 2  
  description: 'both left centers and right centers are not correct. Swap centers.'
  algorithm: "u<sup>2</sup> F B d<sup>2</sup> F B"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'b'
  number: 3  
  description: 'left up center and right up center are not correct. Swap centers.'
  algorithm: "R F u<sup>2</sup> F R F u<sup>2</sup> F"
- guide: '3x4x5-cuboid'
  phase: 6 
  section: 'b'
  number: 4  
  description: 'left up center and right down center are not correct. Swap centers.'
  algorithm: "F u<sup>2</sup> F R F u<sup>2</sup> F R"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'a'
  number: 1  
  description: 'one or both of front and back middle centers are not correct. Go to Step B.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'a'
  number: 2  
  description: 'Both front and back middle centers are incorrect. Swap centers.'
  algorithm: "u<sup>2</sup> Rw Lw d<sup>2</sup> Rw Lw"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'b'
  number: 1  
  description: 'back down middle center is correct. Go to Step C.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'b'
  number: 2  
  description: 'back down middle center is incorrect. Rotate guide until it is correct.'
  algorithm: "x<sup>2</sup> or y<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'c'
  number: 1  
  description: 'front up middle center is correct. Go to Step D.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'c'
  number: 2  
  description: 'front up middle center is incorrect. Swap it for correct center.'
  algorithm: "F Rw u<sup>2</sup> Rw F Rw u<sup>2</sup> Rw"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'd'
  number: 1  
  description: 'front down middle center is correct. Go to Step E.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'd'
  number: 2  
  description: 'front down middle center is incorrect. Swap it for correct center.'
  algorithm: "Rw u<sup>2</sup> Rw F Rw u<sup>2</sup> Rw F"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'e'
  number: 1  
  description: 'front up left center is correct. Go to Step F.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'e'
  number: 2  
  description: 'front up left center is incorrect. Swap it for correct center.'
  algorithm: "r u<sup>2</sup> r u<sup>2</sup> (1x or 2x)"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'f'
  number: 1  
  description: 'front down right center is correct. Go to Step G.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'f'
  number: 2  
  description: 'front down right center is incorrect. Swap it for correct center.'
  algorithm: "r d<sup>2</sup> r d<sup>2</sup> (1x or 2x)"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'g'
  number: 1  
  description: 'one or both of front up right center and front down left center are incorrect. Go to Step H.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'g'
  number: 2  
  description: 'front up right center and front down left centers are both incorrect. Swap them for correct centers.'
  algorithm: "F r u<sup>2</sup> r u<sup>2</sup> F r u<sup>2</sup> r u<sup>2</sup>"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'h'
  number: 1  
  description: 'All centers correct. Puzzle solved.'
  algorithm: "-"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'h'
  number: 2  
  description: 'back down right correct and front down left incorrect. Swap it for correct center.'
  algorithm: "Lw d Rw u' Lw u Rw d' r d Rw u' Lw u Rw d' Lw r"
- guide: '3x4x5-cuboid'
  phase: 7 
  section: 'h'
  number: 3  
  description: 'back down right correct and front up right incorrect. Swap it for correct center.'
  algorithm: "F Lw d Rw u' Lw u Rw d' r d Rw u' Lw u Rw d' Lw r F"
- guide: 'pocket-cube'
  phase: null
  section: 'a'
  number: 1 
  description: 'Cube in cube shape. Move to next step.'
  algorithm: "-"
- guide: 'pocket-cube'
  phase: null
  section: 'a'
  number: 2 
  description: 'Shift a block back into place.'
  algorithm: "(R F R' F') (R' D R D') (F D R')"
- guide: 'pocket-cube'
  phase: null
  section: 'a'
  number: 3 
  description: 'Shift a block back into place.'
  algorithm: "(L' F' L' F) (L D' L' D) (F' D' L)"
- guide: 'pocket-cube'
  phase: null
  section: 'b'
  number: 1 
  description: 'Corner matches centers. Move to the next step.'
  algorithm: "-"
- guide: 'pocket-cube'
  phase: null
  section: 'b'
  number: 2 
  description: 'Rotate a corner to match the centers. Repeat until corner matches centers.'
  algorithm: "(L B' U' L') (B D L' F') (D' L B D') R' y (R F R' F') (R' D R D') (F D R')"
- guide: 'pocket-cube'
  phase: null
  section: 'c'
  number: 1 
  description: 'One edge matches corner. Move to the next step.'
  algorithm: "-"
- guide: 'pocket-cube'
  phase: null
  section: 'c'
  number: 2 
  description: 'No Edge matches corner. Perform until at least one edge matches center.'
  algorithm: "(L B' U' B) (L<sup>2</sup> D F<sup>2</sup> D') (L D L' F') (L' F' L F) (L D' L' D) (F' D' L')"
- guide: 'pocket-cube'
  phase: null
  section: 'd'
  number: 1 
  description: 'Cube is solved.'
  algorithm: "-"
- guide: 'pocket-cube'
  phase: null
  section: 'd'
  number: 2 
  description: 'Flip two edge pieces. Perform algorithm two times.'
  algorithm: "(L B' U' L ') (B D L' F') (D' L B D') (R' B' D)"

